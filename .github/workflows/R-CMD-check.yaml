on:
  workflow_call:
    inputs:
      extra-packages:
        type: string
        default: ""
        required: false
      cache-version:
        type: string
        default: "1"
        required: false
      pandoc-version:
        type: string
        default: "2.7.3"
        required: false
      check-args:
        type: string
        # default: '"--run-donttest", "--no-manual", "--as-cran"'
        default: '"--no-manual", "--as-cran"'
        required: false
      macOS:
        type: string
        default: "macOS-latest"
        required: false
      windows:
        type: string
        default: "windows-latest"
        required: false
      ubuntu:
        type: string
        required: false
        # To test more versions, they must be separated by a space. Ex: `"ubuntu-18.04 ubuntu-20.04`
        default: "ubuntu-18.04"

name: R-CMD-check

jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    outputs:
      config: ${{ steps.config.outputs.config }}
    steps:
    - { name: devel,    id: devel,    uses: r-lib/actions/setup-r@v1, with: { r-version: devel,    install-r: false } }
    - { name: release,  id: release,  uses: r-lib/actions/setup-r@v1, with: { r-version: release,  install-r: false } }
    - { name: oldrel-1, id: oldrel-1, uses: r-lib/actions/setup-r@v1, with: { r-version: oldrel-1, install-r: false } }
    - { name: oldrel-2, id: oldrel-2, uses: r-lib/actions/setup-r@v1, with: { r-version: oldrel-2, install-r: false } }
    - { name: oldrel-3, id: oldrel-3, uses: r-lib/actions/setup-r@v1, with: { r-version: oldrel-3, install-r: false } }
    - { name: oldrel-4, id: oldrel-4, uses: r-lib/actions/setup-r@v1, with: { r-version: oldrel-4, install-r: false } }
    # R is a pre-installed software
    - name: Config
      id: config_r
      shell: Rscript {0}
      run: |
        install.packages("jsonlite")
        mac <- "${{ inputs.macOS }}"
        windows <- "${{ inputs.windows }}"
        ubuntu <- strsplit("${{ inputs.ubuntu }}", "[[:space:],]+")[[1]]
        rver <- list(
          devel   = "${{ steps.devel.outputs.installed-r-version }}",
          release = "${{ steps.release.outputs.installed-r-version }}",
          oldrel1 = "${{ steps.oldrel-1.outputs.installed-r-version }}",
          oldrel2 = "${{ steps.oldrel-2.outputs.installed-r-version }}",
          oldrel3 = "${{ steps.oldrel-3.outputs.installed-r-version }}",
          oldrel4 = "${{ steps.oldrel-4.outputs.installed-r-version }}"
        )
        job <- function(os, r, ...) {
          list(os = os, r = r, ...)
        }
        config <- c(
          list(
            job(mac, rver$release),
            job(windows, rver$release),
            job(windows, "3.6"),
            job(ubuntu[[1]], rver$devel, "http-user-agent" = "release")
          ),
          unlist(recursive = FALSE, lapply(ubuntu, function(ubuntu_) {
            list(
              job(ubuntu_, rver$release),
              job(ubuntu_, rver$oldrel1),
              job(ubuntu_, rver$oldrel2),
              job(ubuntu_, rver$oldrel3),
              job(ubuntu_, rver$oldrel4)
            )
          }))
        )
        config_json <- jsonlite::toJSON(config, auto_unbox = TRUE)
        cat("::set-output name=config::", config_json, sep = "")

  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    needs: [setup]
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJSON(needs.setup.outputs.config) }}

    env:
      GITHUB_PAT: ${{ github.token }}

    steps:
      - uses: rstudio/shiny-workflows/.github/internal/checkout@v1

      - uses: rstudio/shiny-workflows/setup-r-package@v1
        with:
          pandoc-version: ${{ inputs.pandoc-version }}
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          cache-version: ${{ inputs.cache-version }}
          needs: check
          extra-packages: |
            rcmdcheck
            ${{ inputs.extra-packages }}

      - name: Run local before-check step
        uses: rstudio/shiny-workflows/.github/internal/run-local-step@v1
        with:
          name: before-check

      - uses: r-lib/actions/check-r-package@v1
        with:
          check-dir: '"check"' # matches directory below
          args: '${{ inputs.check-args }}'

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
          path: "check"

      - name: Run local after-check-success step
        if: success()
        uses: rstudio/shiny-workflows/.github/internal/run-local-step@v1
        with:
          name: after-check-success
      - name: Run local after-check-failure step
        if: failure()
        uses: rstudio/shiny-workflows/.github/internal/run-local-step@v1
        with:
          name: after-check-failure
